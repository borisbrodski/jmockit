<project name="jmockit" basedir="." default="fullRebuildWithTests">
   <property file="build.properties"/>
   <loadfile property="version" srcFile="version.txt"/>

   <path id="common.classpath">
      <pathelement location="lib/hamcrest-core-1.2.jar"/>
      <pathelement location="lib/commons-logging-1.1.1.jar"/>
      <pathelement location="lib/log4j-1.2.15.jar"/>
      <pathelement location="lib/slf4j-api-1.5.8.jar"/>
      <fileset file="${JUNIT_JAR}"/>
      <fileset file="${TESTNG_JAR}"/>
      <fileset file="${JAVAEE_JAR}" erroronmissingdir="false"/>
   </path>

   <target name="fullRebuildWithTests" depends="buildAll, createjars, tests, sampleTests"/>

   <!-- Targets for building/compiling the several JMockit components (modules) -->

   <macrodef name="build">
      <attribute name="module"/>
      <attribute name="srcdir" default="src"/>
      <attribute name="outdir" default="classes"/>
      <attribute name="extraclasspathLocation" default=""/>
      <attribute name="extraclasspath" default="none"/>
      <sequential>
         <delete dir="@{module}/@{outdir}" includes="**/*"/>
         <mkdir dir="@{module}/@{outdir}"/>

         <javac
            srcdir="@{module}/@{srcdir}" destdir="@{module}/@{outdir}"
            source="1.5" target="1.5" debug="true" nowarn="true">
            <classpath refid="common.classpath"/>
            <classpath location="main/classes"/>
            <classpath location="@{module}/classes"/>
            <classpath location="@{module}/@{outdir}"/>
            <classpath location="@{extraclasspathLocation}"/>
            <classpath><fileset dir="." includes="@{extraclasspath}"/></classpath>
         </javac>

         <copy todir="@{module}/@{outdir}">
            <fileset dir="@{module}/@{srcdir}" includes="**/*.properties, **/*.css, **/*.js"/>
         </copy>
      </sequential>
   </macrodef>
   <macrodef name="buildTests">
      <attribute name="module"/>
      <attribute name="extraclasspathLocation" default=""/>
      <attribute name="extraclasspath" default=""/>
      <sequential>
         <build
            module="@{module}" srcdir="test" outdir="test-classes"
            extraclasspathlocation="@{extraclasspathLocation}" extraclasspath="@{extraclasspath}"/>
      </sequential>
   </macrodef>

   <target name="buildMain">
      <build module="main"/><buildTests module="main"/>
   </target>
   <target name="buildCoverage">
      <build module="coverage"/><buildTests module="coverage"/>
   </target>
   <target name="buildIncremental">
      <build module="incremental" extraclasspathlocation="coverage/classes"/>
   </target>
   <target name="buildHibernateEmulation">
      <build module="hibernate3emul" extraclasspathlocation="${HIBERNATE_JAR}"/>
      <buildTests module="hibernate3emul" extraclasspathlocation="${HIBERNATE_JAR}"/>
   </target>

   <macrodef name="buildSample">
      <attribute name="module"/>
      <attribute name="jdkVersion" default="1.5"/>
      <attribute name="outdir" default="classes"/>
      <attribute name="testLibrary" default="${JUNIT_JAR}"/>
      <attribute name="extraclasspathLocation" default=""/>
      <attribute name="extraclasspath" default="none"/>
      <sequential>
         <delete dir="samples/@{module}/classes" includes="**/*.class"/>
         <javac
            srcdir="samples/@{module}/src" destdir="samples/@{module}/@{outdir}"
            source="@{jdkVersion}" target="@{jdkVersion}" debug="true" nowarn="true">
            <classpath location="@{extraclasspathLocation}"/>
            <classpath><fileset dir="." includes="@{extraclasspath}"/></classpath>
         </javac>

         <delete dir="samples/@{module}/test-classes" includes="**/*.class"/>
         <javac
            srcdir="samples/@{module}/test" destdir="samples/@{module}/test-classes"
            source="@{jdkVersion}" target="@{jdkVersion}" debug="true" nowarn="true">
            <classpath location="jmockit.jar"/>
            <classpath location="@{testLibrary}"/>
            <classpath>
               <fileset dir="samples/@{module}/lib" includes="*.jar" erroronmissingdir="false"/>
            </classpath>
            <classpath location="samples/@{module}/@{outdir}"/>
            <classpath location="@{extraclasspathLocation}"/>
            <classpath><fileset dir="." includes="@{extraclasspath}"/></classpath>
         </javac>
      </sequential>
   </macrodef>

   <target name="buildEasyMock">
      <buildSample module="easymock" extraclasspath="samples/lib/easymock-*.jar"/>
   </target>
   <target name="buildEasyMockCE">
      <buildSample module="easymockclassextension" extraclasspath="samples/lib/easymock*.jar"/>
   </target>
   <target name="buildJMock">
      <buildSample module="jmock" extraclasspath="lib/hamcrest-*.jar"/>
   </target>
   <target name="buildMockito">
      <buildSample module="mockito" extraclasspath="lib/hamcrest-*.jar samples/lib/hamcrest-*.jar"/>
   </target>
   <target name="buildUnitils"><buildSample module="unitils"/></target>
   <target name="buildPowerMock">
      <buildSample module="powermock" extraclasspath="lib/*.jar samples/lib/dom4j-*.jar"/>
   </target>
   <target name="buildJBossAOP"><buildSample module="jbossaop"/></target>
   <target name="buildLoginService">
      <buildSample module="LoginService" testlibrary="${TESTNG_JAR}"/>
   </target>
   <target name="buildTutorial"><buildSample module="tutorial"/></target>
   <target name="buildOrderManagement">
      <buildSample
         module="orderMngmntWebapp" outdir="WEB-INF/classes"
         extraclasspathlocation="${HIBERNATE_JAR}"/>
   </target>
   <target name="buildTimingFramework">
      <buildSample module="TimingFramework" extraclasspath="lib/hamcrest-*.jar"/>
   </target>
   <target name="buildAnimatedTransitions">
      <buildSample
         module="AnimatedTransitions" extraclasspathLocation="samples/TimingFramework/classes"/>
   </target>

   <target
      name="buildSamples"
      depends="buildEasyMock, buildEasyMockCE, buildJMock, buildMockito, buildUnitils,
               buildPowerMock, buildLoginService, buildJBossAOP, buildTutorial,
               buildOrderManagement, buildTimingFramework, buildAnimatedTransitions"/>
   <target
      name="buildAll"
      depends="buildMain, buildCoverage, buildIncremental, buildHibernateEmulation, buildSamples"/>

   <!-- Target for generating the Javadoc HTML documentation -->

   <target name="createjavadocs">
      <delete dir="www/javadoc" includes="**/*.html" excludes="overview.html"/>
      <javadoc
         destdir="www/javadoc" overview="www/javadoc/overview.html" classpathref="common.classpath"
         nodeprecated="true" noindex="true" notree="true" nohelp="true" breakiterator="true"
         source="1.5" windowtitle="JMockit Toolkit API Documentation"
         encoding="UTF-8" charset="UTF-8" docencoding="UTF-8">
         <arg line="-notimestamp -quiet"/>
         <fileset dir="${basedir}/main/src">
            <include name="mockit/*.java"/>
            <include name="mockit/integration/*/*.java"/>
         </fileset>
         <link href="http://java.sun.com/javase/6/docs/api/"/>
         <header><![CDATA[
            <a href="http://code.google.com/p/jmockit" target="_top">JMockit Home</a>
         ]]></header>
         <footer><![CDATA[
            <a href="http://code.google.com/p/jmockit" target="_top">JMockit Home</a>
         ]]></footer>
         <bottom><![CDATA[<font size=-1>© 2006-2010 Rogério Liesenfeld</font>]]></bottom>
      </javadoc>
      <delete file="www/javadoc/package-list"/>
      <delete file="www/javadoc/constant-values.html"/>
   </target>

   <!-- Targets for generating component jars and the distribution zip file -->

   <target name="createjars"
           depends="createjar-core, createjars-coverage, createjar-hibernate3emul"/>

   <target name="createjar-core">
      <jar destfile="jmockit.jar" manifest="main/META-INF/MANIFEST.MF">
         <fileset file="main/src/jmockit.properties"/>
         <fileset
            dir="main/src"
            includes="mockit/**/*.java mockit/external/**/*.txt **/attach/**/*.java"/>
         <fileset
            dir="main/classes"
            includes="mockit/**/*.class **/attach/**/*.class org/junit/*/*.class junit/*/*.class"/>
         <manifest><attribute name="Implementation-Version" value="${version}"/></manifest>
      </jar>
   </target>

   <target name="createjar-coverage">
      <jar
         destfile="jmockit-coverage.jar" basedir="coverage/classes" excludes="integrationTests/**">
         <manifest>
            <attribute name="Class-Path" value="jmockit.jar"/>
            <attribute name="Implementation-Version" value="${version}"/>
         </manifest>
      </jar>
   </target>
   <target name="createjar-coverage-htmlbasic">
      <jar destfile="jmockit-coverage-htmlbasic.jar" basedir="coverage/classes" excludes="**/*">
         <manifest><attribute name="Class-Path" value="jmockit-coverage.jar"/></manifest>
      </jar>
   </target>
   <target name="createjar-coverage-htmlfull">
      <jar destfile="jmockit-coverage-htmlfull.jar" basedir="coverage/classes" excludes="**/*">
         <manifest><attribute name="Class-Path" value="jmockit-coverage.jar"/></manifest>
      </jar>
   </target>
   <target name="createjar-coverage-merge">
      <jar destfile="jmockit-coverage-merge.jar" basedir="coverage/classes" excludes="**/*">
         <manifest><attribute name="Class-Path" value="jmockit-coverage.jar"/></manifest>
      </jar>
   </target>
   <target name="createjar-incremental">
      <jar destfile="jmockit-incremental.jar" basedir="incremental/classes">
         <manifest><attribute name="Class-Path" value="jmockit-coverage.jar"/></manifest>
      </jar>
   </target>
   <target name="createjars-coverage"
           depends="createjar-coverage, createjar-coverage-htmlbasic, createjar-coverage-htmlfull,
                    createjar-coverage-merge, createjar-incremental"/>

   <target name="createjar-hibernate3emul">
      <jar destfile="jmockit-hibernate3emul.jar" basedir="hibernate3emul/classes"/>
   </target>

   <target name="createzip">
      <zip
         destfile="jmockit-${version}.zip" basedir=".." includes="${ant.project.name}/**"
         excludes="**/*.i*, **/*.zip, **/*.ser, **/Temp.java,
                   **/target/**, **/classes/**, **/test-classes/**, jmockit/samples/test-output/**,
                   jmockit/coverage/coverage-report/**, jmockit/samples/*/coverage-report/**,
                   jmockit/coverage-report/**, **/testRun.properties"
         encoding="UTF-8"/>
   </target>

   <target name="release" depends="buildAll, createjars, createzip"/>

   <!-- Targets for running tests and generating corresponding test reports in HTML -->
   
   <macrodef name="testReport">
      <attribute name="name"/>
      <sequential>
         <junitreport>
           <fileset dir="." includes="TEST-*.xml"/>
           <report format="noframes"/>
         </junitreport>
         <delete dir="." includes="TEST*-*.xml" failonerror="false"/>
         <move file="junit-noframes.html" tofile="@{name}.html"/>
      </sequential>
   </macrodef>

   <target name="tests">
      <junit fork="yes" forkmode="once" dir="main">
         <jvmarg value="-javaagent:../jmockit.jar"/>
         <sysproperty
            key="jmockit-tools" value="coverage=mockit.*,mockit.integration.logging.Slf4jMocks"/>
         <classpath refid="common.classpath"/>
         <classpath location="main/test-classes"/>
         <classpath path="jmockit.jar"/>
         <classpath path="jmockit-coverage-htmlbasic.jar"/>
         <batchtest>
            <fileset dir="main/test-classes">
               <include name="**/*Test.class"/>
               <exclude name="**/*CodeUnderTest.class"/>
               <exclude name="**/Base*Test.class"/>
               <exclude name="**/JMockitTest.class"/>
               <exclude name="**/TestNGDecoratorTest.class"/>
               <exclude name="**/ExecutingTest.class"/>
            </fileset>
         </batchtest>
         <formatter type="xml"/>
      </junit>
      <testReport name="main/JMockitTests"/>
   </target>

   <target name="sampleTests">
      <taskdef resource="testngtasks" classpath="${TESTNG_JAR}"/>
      <delete file="samples/coverage.ser" quiet="true"/>

      <junit fork="yes" forkmode="once" dir="samples">
         <classpath path="jmockit.jar"/>
         <classpath path="jmockit-coverage-htmlfull.jar"/>
         <classpath path="jmockit-coverage-merge.jar"/>
         <classpath refid="common.classpath"/>
         <classpath>
            <fileset dir="samples" includes="**/*.jar"/>

            <pathelement location="samples/jbossaop/classes"/>
            <pathelement location="samples/jbossaop/test-classes"/>

            <pathelement location="samples/easymock/classes"/>
            <pathelement location="samples/easymock/test-classes"/>

            <pathelement location="samples/easymockclassextension/classes"/>
            <pathelement location="samples/easymockclassextension/test-classes"/>

            <pathelement location="samples/jmock/classes"/>
            <pathelement location="samples/jmock/test-classes"/>

            <pathelement location="samples/powermock/classes"/>
            <pathelement location="samples/powermock/test-classes"/>

            <pathelement location="${MOCKITO_JAR}"/>
            <pathelement location="samples/mockito/classes"/>
            <pathelement location="samples/mockito/test-classes"/>

            <pathelement location="${UNITILS_HOME}/unitils-core/unitils-core-3.1.jar"/>
            <pathelement location="${UNITILS_HOME}/unitils-mock/unitils-mock-3.1.jar"/>
            <pathelement location="${UNITILS_HOME}/unitils-inject/unitils-inject-3.1.jar"/>
            <pathelement location="samples/unitils/classes"/>
            <pathelement location="samples/unitils/test-classes"/>

            <pathelement location="jmockit-hibernate3emul.jar"/>
            <pathelement location="${HIBERNATE_JAR}"/>
            <pathelement location="samples/orderMngmntWebapp/WEB-INF/classes"/>
            <pathelement location="samples/orderMngmntWebapp/test-classes"/>

            <pathelement location="samples/tutorial/classes"/>
            <pathelement location="samples/tutorial/test-classes"/>

            <pathelement location="samples/TimingFramework/classes"/>
            <pathelement location="samples/TimingFramework/test-classes"/>

            <pathelement location="samples/AnimatedTransitions/classes"/>
            <pathelement location="samples/AnimatedTransitions/test-classes"/>

            <pathelement location="${SPRING_HOME}/dist/org.springframework.core-3.0.0.RELEASE.jar"/>
            <pathelement location="${SPRING_HOME}/dist/org.springframework.test-3.0.0.RELEASE.jar"/>
            <pathelement location="samples/tourdemock/classes"/>
            <pathelement location="samples/tourdemock/test-classes"/>
         </classpath>
         <batchtest>
            <fileset dir="samples/jbossaop/test-classes" includes="**/*Test.class"/>
            <fileset dir="samples/easymock/test-classes" includes="**/*Test.class"/>
            <fileset dir="samples/easymockclassextension/test-classes" includes="**/*Test.class"/>
            <fileset dir="samples/jmock/test-classes" includes="**/*Test.class"/>
            <fileset dir="samples/mockito/test-classes" includes="**/*Test.class"/>
            <fileset dir="samples/unitils/test-classes" includes="**/*Test.class"/>
            <fileset dir="samples/powermock/test-classes" includes="**/*Test.class"/>
            <fileset dir="samples/orderMngmntWebapp/test-classes">
               <include name="**/*Test.class"/>
               <include name="**/*TestUsingExpectations.class"/>
               <exclude name="orderMngr/service/domain/DomainTest.class"/>
            </fileset>
            <fileset dir="samples/tutorial/test-classes" includes="**/*Test.class"/>
            <fileset dir="samples/TimingFramework/test-classes" includes="**/*Test.class"/>
            <fileset dir="samples/AnimatedTransitions/test-classes" includes="**/*Test.class"/>
            <fileset dir="samples/tourdemock/test-classes" includes="**/*Test.class"/>
         </batchtest>
         <formatter type="xml"/>
      </junit>
      <testReport name="samples/JMockitSampleTests"/>

      <testng workingdir="samples" listener="mockit.integration.testng.Initializer">
         <classpath path="jmockit.jar"/>
         <classpath path="jmockit-coverage-htmlfull.jar"/>
         <classpath path="jmockit-coverage-merge.jar"/>
         <classpath refid="common.classpath"/>
         <classpath>
            <fileset dir="samples" includes="lib/*.jar"/>
            <pathelement location="samples/LoginService/classes"/>
            <pathelement location="samples/LoginService/test-classes"/>
         </classpath>
         <classfileset dir="samples/LoginService/test-classes" includes="**/*Test.class"/>
      </testng>
   </target>

   <target name="findbugs">
      <taskdef
         name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
         classpath="${FINDBUGS_HOME}/lib/findbugs-ant.jar"/>
      <findbugs
         home="${FINDBUGS_HOME}" output="html" outputFile="FindBugs-report.html"
         projectname="JMockit" effort="max" reportlevel="low">
         <auxclasspath refid="common.classpath"/>
         <class location="${basedir}/main/classes"/>
         <sourcepath path="${basedir}/main/src"/>
      </findbugs>
   </target>
</project>
